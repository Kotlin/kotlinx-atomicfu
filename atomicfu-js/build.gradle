apply plugin: 'kotlin-platform-js'

apply from: file("$rootProject.projectDir/gradle/node-js.gradle")
apply from: file("$rootProject.projectDir/gradle/test-mocha-js.gradle")
apply from: file("$rootProject.projectDir/gradle/publish-npm-js.gradle")

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    expectedBy project(":atomicfu-common")
    
    testCompile "org.jetbrains.kotlin:kotlin-test-js:$kotlin_version"
    testCompile project(":atomicfu-transformer")
}

tasks.withType(compileKotlin2Js.getClass()) {
    kotlinOptions {
        moduleKind = "umd"
        sourceMap = true
        metaInfo = true
    }
}

compileKotlin2Js {
    kotlinOptions {
        // NOTE: Module base-name must be equal to the package name declared in package.json
        def baseName = "kotlinx-atomicfu"
        outputFile = new File(outputFile.parent, baseName + ".js")
    }
}

// Workaround the problem with Node downloading
repositories.whenObjectAdded {
    if (it instanceof IvyArtifactRepository) {
        metadataSources {
            artifact()
        }
    }
}

def orifinalFile = "$buildDir/classes/kotlin/test/atomicfu-js_test.js"
def transformedFile = "$buildDir/classes/kotlin/test/atomicfu-js_testTransformed.js"

task transformJS (type: JavaExec, dependsOn: compileKotlin2Js) {
    main = "kotlinx.atomicfu.transformer.AtomicFUTransformerJSKt"
    args = [orifinalFile, transformedFile]
    classpath = sourceSets.test.runtimeClasspath
    inputs.file(orifinalFile)
    outputs.file(transformedFile)
}

testMochaNode.dependsOn transformJS

